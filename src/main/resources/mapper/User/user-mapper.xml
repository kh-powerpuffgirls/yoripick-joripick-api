<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user">

	<update id="updateUserImage" parameterType="map">
		UPDATE USERS
		SET IMAGE_NO = #{imageNo}
		WHERE USER_NO = #{userNo}
	</update>


	<select
		id="getMypageInfo" parameterType="long" resultType="map">
		SELECT U.USER_NO,
		U.USERNAME,
		U.EMAIL,
		I.SERVER_NAME AS profile
		FROM USERS U
		LEFT JOIN IMAGE I ON U.IMAGE_NO = I.IMAGE_NO
		WHERE U.USER_NO = #{userNo}
	</select>

	<select
		id="getUserImageNo" parameterType="long" resultType="long">
		SELECT IMAGE_NO FROM USERS WHERE USER_NO = #{userNo}
	</select>

	<delete
		id="deleteImage" parameterType="long">
		DELETE FROM IMAGE WHERE IMAGE_NO = #{imageNo}
	</delete>


	<update
		id="updateUser" parameterType="map"> UPDATE users <set>
			<if test="username != null">
				username = #{username},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
		</set> WHERE user_no =
		#{userNo} </update>

	<update id="updateAlarm">
		UPDATE USERS
		SET
		MSG_NOTI = #{msgNoti},
		REPLY_NOTI = #{replyNoti},
		RVW_NOTI = #{rvwNoti},
		EXP_NOTI = #{expNoti}
		WHERE USER_NO = #{userNo}
	</update>

	<select
		id="getAlarmSettings" resultType="map">
		SELECT
		MSG_NOTI as msgNoti,
		REPLY_NOTI as replyNoti,
		RVW_NOTI as rvwNoti,
		EXP_NOTI as expNoti
		FROM USERS
		WHERE USER_NO = #{userNo}
	</select>

	<select
		id="getUserAllergies" parameterType="long" resultType="long">
		SELECT ALLERGY_NO
		FROM USER_ALLERGY
		WHERE USER_NO = #{userNo}
	</select>

	<insert
		id="insertUserAllergy">
		INSERT INTO user_allergy(user_no, allergy_no)
		VALUES (#{userNo}, #{allergyNo})
	</insert>

	<delete
		id="deleteUserAllergy">
		DELETE FROM user_allergy
		WHERE user_no = #{userNo} AND allergy_no = #{allergyNo}
	</delete>

	<update
		id="inactiveUser">
		UPDATE USERS
		SET STATUS = 'INACTIVE',INACTIVE_DATE = SYSDATE
		WHERE USER_NO = #{userNo}
	</update>

	<select
		id="getUserByUserNo" parameterType="long"
		resultType="com.kh.ypjp.security.model.dto.AuthDto$User">
		SELECT
		USER_NO,
		USERNAME,
		STATUS,
		INACTIVE_DATE,
		IMAGE_NO,
		SIK_BTI
		FROM USERS
		WHERE USER_NO = #{userNo}
	</select>

	<select
		id="getUserRecipes" parameterType="long" resultType="map">
		SELECT
		R.RCP_NO,
		R.RCP_NAME,
		NVL(L.LIKE_CNT, 0) AS RCP_LIKE,
		I.SERVER_NAME
		FROM RECIPE R
		LEFT JOIN IMAGE I
		ON R.IMAGE_NO = I.IMAGE_NO
		LEFT JOIN (
		SELECT REF_NO, COUNT(*) AS LIKE_CNT
		FROM LIKES
		WHERE REF_TYPE = 'RECIPE'
		AND LIKE_STATUS = 'LIKE'
		GROUP BY REF_NO
		) L ON R.RCP_NO = L.REF_NO
		AND DELETE_STATUS = 'N'
		WHERE R.USER_NO = #{userNo}
	</select>

	<select id="getUserLikedRecipes" parameterType="long" resultType="map">
		SELECT
		R.RCP_NO,
		R.RCP_NAME,
		NVL(LC.LIKE_CNT, 0) AS RCP_LIKE,
		I.SERVER_NAME
		FROM LIKES L
		JOIN RECIPE R
		ON L.REF_NO = R.RCP_NO
		AND L.REF_TYPE = 'RECIPE'
		AND L.LIKE_STATUS = 'LIKE'
		LEFT JOIN IMAGE I
		ON R.IMAGE_NO = I.IMAGE_NO
		LEFT JOIN (
		SELECT REF_NO, COUNT(*) AS LIKE_CNT
		FROM LIKES
		WHERE REF_TYPE = 'RECIPE'
		AND LIKE_STATUS = 'LIKE'
		GROUP BY REF_NO
		) LC ON R.RCP_NO = LC.REF_NO
		AND DELETE_STATUS = 'N'
		WHERE L.USER_NO = #{userNo}
	</select>

	<delete id="deleteInactiveUsersOver90Days">
		DELETE FROM USERS
		WHERE STATUS = 'INACTIVE'
		AND SYSDATE - INACTIVE_DATE > 90
	</delete>

</mapper>